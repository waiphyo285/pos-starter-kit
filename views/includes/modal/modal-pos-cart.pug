include ./modal-sale-voucher

div.modal.fade#dialogShoppingCart(tabindex='-1', role='dialog', aria-labelledby='dialogShoppingCart' data-backdrop="static" data-keyboard="false")
  div.modal-dialog.modal-lg.modal-dialog-centered.custom-fullview-lg(role='document')
    div.modal-content
      div.modal-header
        h5.modal-title  !{content.modal.shop_cart}
          
        .d-flex.justify-content-end
          //- h5.modal-title(style="color: var(--primary)")
          //-   span.total-amount  0
            
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true') &times;
      
      div.modal-body
        div.row
          .col-md-8
            form#cartModalForm.form-horizontal.form-validate(role='form' method="put", action="#" novalidate)
              .form-group
                // https://bootsnipp.com/snippets/O5mM8

                .table-responsive
                  table.table.table-bordered.shopping-cart
                    thead.text-muted
                      tr
                        th.text-center(style="min-width: 60px") 
                          | #
                        th.text-left(style="min-width: 120px")
                          | Product
                        th.text-center(style="min-width: 120px") 
                          | Quantity
                        th.text-right(style="min-width: 120px") 
                          | Sub Total
                    tbody

          .col-md-4  
            form#payModalForm.form-horizontal.form-validate(role='form' method="put", action="#" novalidate)
              .form-group.row
                div.col-md-12.mb-3
                  label.control-label(for='search_customer') !{content.customer} 
                  select.form-control.input-sm.page-select2-picker#searchCustomer(name="customer_id" data-live-search="true", data-size="8" )
                  span.invalid-feedback
                    | !{content.common.err_required}
                    
                .col-md-12.mb-3
                  label.control-label(for='pay_method') !{content.pay_method} *
                  select.form-control.input-sm.custom-select.none-select2-picker#payMethod(name='paymethod_id' data-live-search="true", data-size="8" required)
                  span.invalid-feedback
                    | !{content.common.err_required}

                .col-md-12.mb-3
                  label.control-label(for='description') !{content.description}
                  textarea.form-control.input-sm#description(name='remark', rows='3' required) Noted
                  span.invalid-feedback
                    | !{content.common.err_required}

                .col-md-8.mb-3
                  .input-group
                    input.form-control.form-control-sm#promoCode(type='text' name='promo_code' placeholder='Promo code')
                    .input-group-append
                      button#promoApply.btn.material-primary(type='button')
                        i.bi.bi-save
                        span  !{content.apply}

                .col-md-4.mb-3
                  .btn-group.btn-group-sm.btn-group-toggle(data-toggle='buttons')
                    label.btn.btn-outline-success.btn-toggle.active
                      input(type='radio' name=`printed` value="1" autocomplete='off' checked)
                      |  Print 

                    label.btn.btn-outline-success.btn-toggle
                      input(type='radio' name=`printed` value="0" autocomplete='off')
                      |  No, yet

              .row.pt-4
                .col-md-12.my-6
                  .border
                    .card-content
                      .card-body(style="font-size: 22px")
                        .media.d-flex.total-amount-line-through
                          .align-self-center
                            .count-to.text-secondary Total Amount
                          .media-body.text-right
                            .count-to.total-amount(style='color: var(--primary)') 0
                        #savingAmount.media.d-flex
                          .align-self-center.total-saving-label.d-none
                            .count-to.text-secondary Total Saving
                          .media-body.text-right.total-saving-amount.d-none
                            .count-to.total-saving(style='color: var(--primary)') 0
                        hr
                        .media.d-flex
                          .align-self-center
                            .count-to.text-secondary To Pay
                          .media-body.text-right
                            .count-to.total-pay(style='color: var(--primary)') 0


      div.modal-footer.d-flex.justify-content-between
        button.btn.material-button.material-secondary.w-100#dialogCancel(type='button', data-dismiss='modal')
          |  !{content.common.btn_close}
        
        button.btn.material-button.material-primary.w-100#dialogUpdate(type='button', data-action="update")
          i.bi.bi-save
          |  !{content.common.btn_update}

        button.btn.material-button.material-primary.w-100#dialogPay(type='button', data-action="payment")
          i.bi.bi-cash
          |  !{content.pay}
  #hiddenInvoice
    table.d-none
      tbody
        tr.item
          td
            span.mx-1.item-name
          td.align-right.quantity
          td.align-right.amount

  script(src='/javascript/lib/moment/moment.js')
  script.
    $(document).ready(function() {
      const apiUrl = `/api/${v1}`

      $('#payMethod').select2({
        width: "100%",
        dropdownParent: $('#dialogShoppingCart')
      });

      ajaxLoadOption({
        type: "GET",
        url:"/bank",
        showKey: "name",
        selectId: "#payMethod",
        filterObj: { status: 1 },
        isSelected: true
      });

      ajaxLoadOption2({
        type: "GET",
        url:"/customer",
        showKey: "name",
        filterKey: "name",
        selectId: "#searchCustomer",
        dropdownParent: $("#dialogShoppingCart"),
        minLength: 3
      });

      $("#dialogUpdate").on('click', function() {
        const buttonType = $(this).data('action')
        const actionForm = buttonType == 'update' && '/sale-order'
        $('#cartModalForm').attr({ action: actionForm }).submit()
      })

      $("#dialogPay").on('click', async function() {
        const form = $('#payModalForm')
        const cartId = getLocalStoreData('cartId')
        const isValidForm = form[0].checkValidity()

        if (!isValidForm) {
          form.addClass('was-validated')
          return
        }

        triggerCartUpdate().then(function() {
          $('#dialogShoppingCart').modal('hide');
          $('#dialogPrintInvoice').modal('show');
          form.attr({ action: '/proceed-order' }).submit()
        })
      })

      $("#promoApply").on('click', function() {
        const url = `${apiUrl}/coupon-code`
        const promoCode = $('#promoCode').val()
        const totalAmount = parseInt($('.total-amount').text())

        panelServiceApi({
          url, 
          type: 'GET',
          data: { filter: { code: promoCode }, promoApply : true, totalAmount} 
        }, function(data) {
            const totalPay = data.data.totalPay
            const savingAmount = data.data.savingAmount

            $('.total-pay').text(totalPay);
            $('.total-saving').text(savingAmount);
            $('.total-amount-line-through').css('text-decoration', 'line-through');
            $('#savingAmount').find('.total-saving-label').removeClass('d-none');
            $('#savingAmount').find('.total-saving-amount').removeClass('d-none');
          }
        )
      })

      $('#cartModalForm').submit(function(e) {
        e.preventDefault();
        
        const orderItems = [];
        const action = $(this).attr('action')
        const cartId = getLocalStoreData('cartId')
        const url = `${apiUrl}/${action}/${cartId}`

        $('tbody tr').not(":last").each(function() {
          orderItems.push({
            item_id: $(this).find('.action .item-id').val(),
            quantity: $(this).find('.quantity input.value').val()
          });
        })

        panelServiceApi({
          url, 
          type: 'PUT',
          data: { order_items: orderItems } 
        }, function(data) {
          if (data.data?.remove) {
            $("#cartCount").find('span:nth(1)').text('')
            localStoreService({ key: 'cartId', method: 'remove' })
            return
          } 

          if (data.data) {
            toastrWarning({
              type: 'success',
              title: content['modal'].success,
              description: content['user-msg'].cart_success,
            })
          }
        })
      })

      $('#payModalForm').submit(function(e) {
        e.preventDefault();
        
        const data = {};
        const action = $(this).attr('action')
        const cartId = getLocalStoreData('cartId')
        const url = `${apiUrl}/${action}/${cartId}`
        const formData = $(this).serializeArray();

        formData.forEach(function (field) {
          data[field.name] = field.value;
        });

        panelServiceApi({
          url, 
          type: 'POST',
          data: data 
        }, function(data) {
          if (data.code === '200' || data.code === '201') {
            var htmlRow = ''
            var itemRow = $('#hiddenInvoice').find('table > tbody').clone()

            $.each(data.data.order_items, async function (idx, item) {
              itemRow.find('.item-name').text(item.item_name)
              itemRow.find('.quantity').text(item.quantity)
              itemRow.find('.amount').text(item.subtotal_amount)
              htmlRow += itemRow.html()
            })

            $("#invoice-table").find("tbody").html(htmlRow)
            $('#invoice-table').find("tfoot").find('.tax').text(data.data.tax_amount)
            $('#invoice-table').find("tfoot").find('.sub-total').text(data.data.subtotal_amount)
            $('#invoice-table').find("tfoot").find('.dis-total').text(data.data.discount_amount)
            $('#invoice-table').find("tfoot").find('.tax-total').text(data.data.tax_amount)
            $('#invoice-table').find("tfoot").find('.total-amount').text(data.data.total_amount)

            if(data.data.paymethod_id){
              $('#invoice-table').find("tfoot").find('.paid-by').text(`Paid by: ${data.data.paymethod_id.name}`)
              $('#invoice-table').find("tfoot").find('.amount').text(`Amount: ${data.data.total_amount+1}`)
              $('#invoice-table').find("tfoot").find('.change').text(`Change: 1`)
            }

            $('#invoice-box').find('.voucher-info').html(`
              Date: ${moment(new Date(data.data.created_at)).format('ddd MMM DD YYYY hh:mm A')} <br>
              Sale No/Ref: ${data.data.invoice_no} <br>
              Sales Persona: ${data.data.staff_id.name}
            `)

            $('#invoice-box').find('.customer-info').html(`
                Customer: ${data.data.customer_id && data.data.customer_id.name ? data.data.customer_id.name : '-'} <br>
                Phone: ${data.data.customer_id && data.data.customer_id.phone_1 ? data.data.customer_id.phone_1 : '-'}
            `);

            $('#searchCustomer').val(null).trigger('change');
            $("#cartCount").find('span:nth(1)').text('')

            localStoreService({ key: 'cartId', method: 'remove' })
            toastrWarning({
              type: 'success',
              title: content['modal'].success,
              description: content['user-msg'].pay_success,
            })
          }
        })
      })

      function triggerCartUpdate() {
        return new Promise((resolve, reject) => {
          $("#dialogUpdate").trigger('click');
          setTimeout(resolve, 1000); 
        });
      }
    })
