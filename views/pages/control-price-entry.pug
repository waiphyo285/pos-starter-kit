extends ../includes/layout-main
block content
  -var isEdited = data._id || data.id;

  main.border.mx-3.mb-5.p-3(role='main')
    include ./../includes/entry/entry-header
    
    ul#myTab.nav.nav-tabs.mb-3(role='tablist')
      li.nav-item(role='information')
        button#information-tab.nav-link.active(data-toggle='tab' data-target='#information' type='button' role='tab' aria-controls='information' aria-selected='true')
          i.bi.bi-info-circle
          span.d-none.d-lg-block !{content.common.tab_info}

      li.nav-item.ml-auto
        h6.font-weight-bold !{data.invoice_no}
        span !{data._created_at}

    #myTabContent.tab-content
      #information.tab-pane.fade.show.active(role='tabpanel' aria-labelledby='information-tab')
        include ./../includes/entry/entry-form
          block inputs
            .row
              div.col-md-8.order-2.order-md-1
                input.input-sm#tag(type='hidden', name='tag', value=data.tag)
                input.input-sm#category(type='hidden', name='category', value=data.category)

                div.form-group.row
                  div.col-md-6.mb-3
                    label.control-label(for='owner_id') !{content.owner_name} *
                    select.form-control.input-sm.custom-select.all-select2-picker#ownerId(name='owner_id' value=data.owner_id data-value=data.owner_id, data-live-search="true", data-size="8" required)
                    span.invalid-feedback
                      | !{content.common.err_required}

                  div.col-md-6.mb-3
                    label.control-label(for='store_id') !{content.store_name} *
                    select.form-control.input-sm.custom-select.all-select2-picker#storeId(name='store_id' value=data.store_id data-value=data.store_id, data-live-search="true", data-size="8" required)
                    span.invalid-feedback
                      | !{content.common.err_required}

                div.p-3.border
                  div.form-group.row
                    div.col-md-12
                      label.control-label(for='search_item') !{content.search_item} 
                      select.form-control.input-sm.page-select2-picker#searchItem(data-live-search="true", data-size="8")

                .table-responsive
                  table.table.bg-light.mt-3
                    thead
                      tr
                        th 
                        th #
                        th.text-center !{content.product}
                        th.text-center !{content.retail_price}
                        th.text-center !{content.wholesale_price}

                    tbody#itemList
                      tr#sampleTr.d-none
                        td.text-left(width="40")
                          button.btn.btn-sm.remove-row(type="button" data-id="")
                            i.text-danger.font-weight-bold.bi.bi-trash
                        td.text-center(width="40")
                          input.item-id.d-none(type="hidden")
                          span.item-key
                        td.text-left
                          span.item-name
                        td.text-center(width="200")
                          input.item-retail-price(type='number', role='number', min='0' max='10000000' onkeyup="if(parseInt(this.value)>this.max){ this.value=this.max; return false; }" autocomplete="off")
                        td.text-center(width="200")
                          input.item-wholesale-price(type='number', role='number', min='0' max='10000000' onkeyup="if(parseInt(this.value)>this.max){ this.value=this.max; return false; }" autocomplete="off")

                      tr#noRecord.bg-white
                        td.text-center(colspan='5')
                          span No records added

              div.col-md-4.order-1.order-md-2
                .border.rounded.mt-md-4.mt-0.mb-3
                  .card-header
                    .d-flex.justify-content-between
                      h6.selected-header.pt-2
                        i.bi.bi-file-earmark-text
                        |  Summary
                    
                  .card-body
                    p.selected-description.font-weight-bold
                      span.badge.badge-light.badge-pill(style="font-size: 14px") !{data.category}
                      span.badge.badge-light.badge-pill(style="font-size: 14px") !{data.tag}
                      br
                      br
                      i.bi.bi-lightbulb-fill.text-warning
                      |  Change the pricing for individual items.

            include ./../includes/entry/entry-btn2
            +entryButtons({ submitDisabled: !!isEdited })
            
        form#postSuccessForm(method='GET', action=page.list.url)

  script.
    const existingItems = new Set();

    $(document).ready(function() {
      const isEdited = $("input[name='id']").val();

      ajaxLoadOption({
        type: "GET",
        url:"/owner",
        showKey: "name",
        selectId: "#ownerId",
        filterObj: { status: 1 },
        isSelected: true,
      }, (data) => {
        $("#ownerId").trigger('change');
      });

      ajaxLoadOption2({
        type: "GET",
        url:"/variant",
        showKey: "name",
        filterKey: "barcode",
        selectId: "#searchItem",
      });

      $("#ownerId").on('change', function() {
        const owner_id = $(this).val() ||         // get value [new entry]
                         $(this).data('value');   // get value [edit entry]

        owner_id && ajaxLoadOption({
          type: "GET",
          url:"/store",
          showKey: "name",
          selectId: "#storeId",
          filterObj: { status: 1, owner_id },
        });
      });

      $("#searchItem").on("select2:select", function (e) {
        const selectedOption = e.params.data;
        const apiUrl = `/api/${v1}/variant/${selectedOption.id}`

        commonServiceApi({ url: apiUrl }, function(res) {
          const data = res.data || {}
          const isExisted = existingItems.has(data?._id)

          if (!isExisted) {
            existingItems.add(data._id);
            makeNewTableRow(data);
          }
        })
      });

      $("body").on("click", ".remove-row", function() {
        const currentR = $(this).closest("tr");

        currentR.remove()
      });
    })

      function makeNewTableRow(data) {
        var item = data;
        var totalRows = existingItems.size;
        var clonedRow = $("#sampleTr").clone();

        clonedRow.find(".item-key").text(totalRows); 
        clonedRow.find(".item-name").text(item.name); 

        clonedRow.find(".item-id").attr({ 
          value: item._id, 
          name: `price_items[${totalRows-1}][item_id]`
        });

        clonedRow.find(".item-retail-price").attr({ 
          value: item.retail_price, 
          name: `price_items[${totalRows-1}][retail_price]`
        });

        clonedRow.find(".item-wholesale-price").attr({ 
          value: item.wholesale_price, 
          name: `price_items[${totalRows-1}][wholesale_price]`
        });
    
        $("#noRecord").addClass('d-none');
        $("#itemList").append(`<tr>${clonedRow.html()}</tr>`);
      }