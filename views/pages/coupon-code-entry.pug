extends ../includes/layout-main
block content
  main.border.mx-3.mb-5.p-3(role='main')
    include ./../includes/entry/entry-header

    ul#myTab.nav.nav-tabs.mb-3(role='tablist')
      li.nav-item(role='presentation')
        button#information-tab.nav-link.active(data-toggle='tab' data-target='#information' type='button' role='tab' aria-controls='information' aria-selected='true')
          i.bi.bi-info-circle
          span.d-none.d-lg-block !{content.common.tab_info}
          
    include ./../includes/entry/entry-form
      block inputs
        #myTabContent.tab-content
          #information.tab-pane.fade.show.active(role='tabpanel' aria-labelledby='information-tab')
        
            div.form-group.row
              div.col-md-6.mb-3
                label.control-label(for='code') !{content.code} *
                .input-group
                  input.form-control.input-sm#code(type='text', name='code', value=data.code, maxlength="55" autocomplete="off" readonly)
                  .input-group-prepend.cursor-pointer.copy-btn
                    span.input-group-text.rounded-right
                      svg.bi.bi-copy(xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' viewbox='0 0 16 16')
                        path(fill-rule='evenodd' d='M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z')

              div.col-md-6.mb-3
                label.control-label(for='coupon_type_id') !{content.coupon_type} *
                select.form-control.input-sm.custom-select.all-select2-picker#couponTypeId(name='coupon_type_id' value=data.coupon_type_id data-value=data.coupon_type_id, data-live-search="true", data-size="8" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='owner_id') !{content.owner_name} *
                select.form-control.input-sm.custom-select.all-select2-picker#ownerId(name='owner_id' value=data.owner_id data-value=data.owner_id, data-live-search="true", data-size="8" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='store_id') !{content.store_name} *
                select.form-control.input-sm.custom-select.all-select2-picker#storeId(name='store_id' value=data.store_id data-value=data.store_id, data-live-search="true", data-size="8" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='promo_amount') !{content.promo_amount} *
                input.form-control#promoAmount(type='number', name='promo_amount', value=data.promo_amount  autocomplete="off") 
                  
              div.col-md-6.mb-3
                label.control-label(for='expensed_at') !{content.expired_at} *
                .input-group
                  input.form-control.date#expiredAt(type='text', name='expired_at', value=data.expired_at editable="false"  autocomplete="off") 
                  .input-group-prepend
                    span.input-group-text.rounded-right
                      i.bi.bi-calendar2

              div.col-md-6.mb-3
                label.control-label(for='max_times') !{content.max_times} * ( 0 - 1000)
                input.form-control.input-sm#maxTimes(type='number', name='max_times', role='number', min='0' max='1000' onkeyup="if(parseInt(this.value)>this.max){ this.value=this.max; return false; }" value=`${data.max_times || 0}` autocomplete="off")
                  
              div.col-md-12.mb-3
                label.control-label(for='description') !{content.description}
                textarea.form-control.input-sm#description(name='description', rows='3')=data.description

              div.col-md-12.mb-3
                include ./../includes/common/input-status

        include ./../includes/entry/entry-btn

    form#postSuccessForm(method='GET', action=page.list.url)

  script.
    $(document).ready(function() {
      const isEdited = $("input[name='id']").val();

       $('.copy-btn').click(function () {
        var inputField = $('#code');
        inputField.select();
        document.execCommand('copy');
        inputField.blur();
      });

      ajaxLoadOption({
        type: "GET",
        url:"/owner",
        showKey: "name",
        selectId: "#ownerId",
        filterObj: { status: 1 },
        isSelected: true,
      }, (data) => {
          $("#ownerId").trigger('change');
      });

      ajaxLoadOption({
        type: "GET",
        url:"/coupon-type",
        showKey: "name",
        selectId: "#couponTypeId",
        filterObj: { status: 1 },
      });

      $("#ownerId").on('change', function() {
        const owner_id = $(this).val() ||         // get value [new entry]
                         $(this).data('value');   // get value [edit entry]

        owner_id && ajaxLoadOption({
          type: "GET",
          url:"/store",
          showKey: "name",
          selectId: "#storeId",
          filterObj: { status: 1, owner_id },
        });
      });

      if (isEdited && typeof isEdited === "string") {
        var owner_id = $('#ownerId').data('value');
        owner_id && $('#ownerId').val(owner_id).change();

        var expired_at = $("#expiredAt").val();
        expired_at && 
          $("#expiredAt").datepicker('setDate', new Date(expired_at));
      }
    });