extends ../includes/layout-main
block content
  main.border.mx-3.mb-5.p-3(role='main')
    include ./../includes/entry/entry-header

    ul#myTab.nav.nav-tabs.mb-3(role='tablist')
      li.nav-item(role='presentation')
        button#information-tab.nav-link.active(data-toggle='tab' data-target='#information' type='button' role='tab' aria-controls='information' aria-selected='true')
          i.bi.bi-info-circle
          span.d-none.d-lg-block !{content.common.tab_info}

      li.nav-item.ml-auto
        h6.font-weight-bold !{data.invoice_no}
        span !{data._created_at}
          
    include ./../includes/entry/entry-form
      block inputs
        #myTabContent.tab-content
          #information.tab-pane.fade.show.active(role='tabpanel' aria-labelledby='information-tab')

            div.form-group.row
              div.col-md-6
                label.control-label(for='expensed_at') !{content.expensed_at} *
                .input-group
                  input.form-control.date#expensedAt(type='text', name='expensed_at', value=data.expensed_at editable="false"  autocomplete="off" required) 
                  .input-group-prepend
                    span.input-group-text.rounded-right
                      i.bi.bi-calendar2
                  span.invalid-feedback
                    | !{content.common.err_required}

            div.form-group.row
              div.col-md-6.mb-3
                label.control-label(for='owner_id') !{content.owner_name} *
                select.form-control.input-sm.custom-select.all-select2-picker#ownerId(name='owner_id' value=data.owner_id data-value=data.owner_id, data-live-search="true", data-size="8" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='store_id') !{content.store_name} *
                select.form-control.input-sm.custom-select.all-select2-picker#storeId(name='store_id' value=data.store_id data-value=data.store_id, data-live-search="true", data-size="8" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='total_amount') !{content.total_amount} * ( 0 - 100-000-00 )
                input.form-control.input-sm#totalAmount(type='number', name='total_amount', role='number', min='0' max='10000000' onkeyup="if(parseInt(this.value)>this.max){ this.value=this.max; return false; }" value=`${data.total_amount || 0}` autocomplete="off" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='state') !{content.state} *
                select.form-control.input-sm.custom-select.all-select2-picker#taxMethod(name='tax_method' value=data.tax_method data-value=data.tax_method, data-live-search="true", data-size="8" required)
                  option(value="" disabled selected) -- Select one --
                  option(value="draft" selected) Draft
                  option(value="opened") Opened
                  option(value="paid") Paid
                span.invalid-feedback
                  | !{content.common.err_required}
            
              div.col-md-12.mb-3
                label.control-label(for='remark') !{content.remark}
                textarea.form-control.input-sm#description(name='remark', rows='3')=data.remark

              //- div.col-md-6.mb-3
              //-   label.control-label.d-block(for='state') !{content.state} 
              //-   .btn-group.btn-group-sm.btn-group-toggle(data-toggle='buttons')
              //-     label.btn.btn-outline-warning.btn-toggle(class=`${data.state == 'Draft' ? "active" : ""}`)
              //-       input(type='radio' name=`state` value="Draft" autocomplete='off' checked=(data.state == 'Draft'))
              //-       |  Draft
                
              //-     label.btn.btn-outline-primary.btn-toggle(class=`${data.state == 'Opened' ? "active" : ""}`)
              //-       input(type='radio' name=`state` value="Opened" autocomplete='off' checked=(data.state == 'Opened'))
              //-       |  Opened

              //-     label.btn.btn-outline-success.btn-toggle(class=`${data.state == 'Paid' ? "active" : ""}`)
              //-       input(type='radio' name=`state` value="Paid" autocomplete='off' checked=(data.state == 'Paid'))
              //-       |  Paid

              //- div.col-md-6.mb-3
              //-   include ./../includes/common/input-status

        include ./../includes/entry/entry-btn

    form#postSuccessForm(method='GET', action=page.list.url)
  
  script.
    $(document).ready(function() {
      const isEdited = $("input[name='id']").val();

      ajaxLoadOption({
        type: "GET",
        url:"/owner",
        showKey: "name",
        selectId: "#ownerId",
        filterObj: { status: 1 },
        isSelected: true,
      }, (data) => {
          $("#ownerId").trigger('change');
      });
      
      $("#ownerId").on('change', function() {
        const owner_id = $(this).val() ||         // get value [new entry]
                         $(this).data('value');   // get value [edit entry]

        owner_id && ajaxLoadOption({
          type: "GET",
          url:"/store",
          showKey: "name",
          selectId: "#storeId",
          filterObj: { status: 1, owner_id },
        });
      });

      if (isEdited && typeof isEdited === "string") {
        var expensed_at = $("#expensedAt").val();
        expensed_at && 
          $("#expensedAt").datepicker('setDate', new Date(expensed_at));

        var owner_id = $('#ownerId').data('value');
        owner_id && $('#ownerId').val(owner_id).change();
      }
    })