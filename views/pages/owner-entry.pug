extends ../includes/layout-main
block content
  -var isEdited = data._id || data.id;
  -var isSubscribedAccount = data.plan_id || "";
  -var isDeveloper = data.role == "developer" ? true : false;

  main.border.mx-3.mb-5.p-3(role='main')
    include ./../includes/entry/entry-header
    include ./../includes/modal/modal-subscribe-plan
    
    ul#myTab.nav.nav-tabs.mb-3(role='tablist')
      li.nav-item(role='information')
        button#information-tab.nav-link.active(data-toggle='tab' data-target='#information' type='button' role='tab' aria-controls='information' aria-selected='true')
          i.bi.bi-info-circle
          span.d-none.d-lg-block !{content.common.tab_info}

      if isEdited
        li.nav-item.mx-1(role='stores')
          button#linked-store-tab.nav-link(data-toggle='tab' data-target='#linked-store' type='button' role='tab' aria-controls='linked-store' aria-selected='false')
            i.bi.bi-cart2
            span.d-none.d-lg-block !{content.common.tab_store}

    #myTabContent.tab-content
      #information.tab-pane.fade.show.active(role='tabpanel' aria-labelledby='information-tab')
        include ./../includes/entry/entry-form
          block inputs
            #information.tab-pane.fade.show.active(role='tabpanel' aria-labelledby='information-tab')
            if isEdited && !isDeveloper
              .d-flex.justify-content-end
                .btn-group.btn-group-md
                  if isSubscribedAccount
                    button.btn.btn-warning(type="button" role='button' data-toggle="modal", data-target="#dialogSubscribePlan")
                      i.bi.bi-pencil
                      |   !{content.modal.edit_plan}
                  else
                    button.btn.material-primary(type="button" role='button' data-toggle="modal", data-target="#dialogSubscribePlan")
                      i.bi.bi-plus-circle
                      |   !{content.modal.subscribe_plan}
              hr

            div.form-group.row
              div.col-md-6.mb-3
                label.control-label(for='name') !{content.name} *
                input.form-control.input-sm#name(type='text', name='name', value=data.name, maxlength="55" autocomplete="off" required autofocus)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='owner_type_id') !{content.owner_type}
                select.form-control.input-sm.custom-select.all-select2-picker#ownerTypeId(name='owner_type_id' value=data.owner_type_id data-value=data.owner_type_id, data-live-search="true", data-size="8")

              div.col-md-6.mb-3
                label.control-label(for='city_id') !{content.city_mm}
                select.form-control.input-sm.custom-select.all-select2-picker#cityId(name='city_id' value=data.city_id data-value=data.city_id, data-live-search="true", data-size="8")

              div.col-md-6.mb-3
                label.control-label(for='township_id') !{content.township_mm}
                select.form-control.input-sm.custom-select.all-select2-picker#townshipId(name='township_id' value=data.township_id data-value=data.township_id, data-live-search="true", data-size="8")

            hr 

            div.form-group.row
              div.col-md-6.mb-3
                label.control-label(for='business_name') !{content.business_name} *
                input.form-control.input-sm#business_name(type='text', name='business_name', value=data.business_name, maxlength="55" autocomplete="off" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='business_type') !{content.business_type}
                select.form-control.input-sm.custom-select.all-select2-picker#businessType(name='business_type' value=data.business_type data-value=data.business_type, data-live-search="true", data-size="8")
                  option(value="" disabled selected) -- Select one --
                  option(value="convenience" selected) Convenience
                  option(value="restaurant") Restaurant

              //- div.col-md-6.mb-3
              //-   label.control-label(for='max_store') !{content.max_store} *
              //-   input.form-control.input-sm#max_store(type='number', name='max_store', role='number', min='1' max='10' onkeyup="if(parseInt(this.value)>this.max){ this.value=this.max; return false; }" value=data.max_store autocomplete="off" required)
              //-   span.invalid-feedback
              //-     | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='email') !{content.email} *
                input.form-control.input-sm#email(type='email', name='email', value=data.email, maxlength="55" autocomplete="off" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-3.mb-3
                label.control-label(for='phone_1') !{content.phone_1} *
                input.form-control.input-sm#phone1(type='text', name='phone_1', value=data.phone_1, maxlength="55" autocomplete="off" required)
                span.invalid-feedback
                  | !{content.common.err_required}
                  
              div.col-md-3.mb-3
                label.control-label(for='phone_2') !{content.phone_2}
                input.form-control.input-sm#phone2(type='text', name='phone_2', value=data.phone_2, maxlength="55" autocomplete="off" )

              div.col-md-12.mb-3
                label.control-label(for='address') !{content.address}
                textarea.form-control.input-sm#address(name='address', rows='3')=data.address

            hr

            div.form-group.row
              div.col-md-12.mb-3
                label.control-label(for='description') !{content.description}
                textarea.form-control.input-sm#description(name='description', rows='3')=data.description

              div.col-md-12.mb-3
                include ./../includes/common/input-status

            include ./../includes/entry/entry-btn

      if isEdited
        #linked-store.tab-pane.fade(role='tabpanel' aria-labelledby='linked-store-tab')
          .d-flex.justify-content-between
            include ./../includes/entry/entry-search

            .btn-group.d-none.d-md-block         
              button.btn.material-button.material-primary(type='button')
                i.bi.bi-download
                span.ml-1.d-none.d-lg-inline-block
                  | Download
  
          hr.my-4

          #sampleStore.d-none
            .col-sm-6.col-md-4.col-xl-3
              .border.rounded.mb-4
                .card-header
                  .d-flex.justify-content-between
                    h6.store-header.pt-2 Name
                .card-body
                  h5.store-address Address

          .row.list-store

          include ./../includes/entry/entry-paging


    form#postSuccessForm(method='GET', action=page.list.url)

  include ./../includes/entry/entry-script

  script.
    $(document).ready(function() {
      const isEdited = $("input[name='id']").val();

      ajaxLoadOption({
        type: "GET",
        url:"/owner-type",
        showKey: "name",
        selectId: "#ownerTypeId",
        filterObj: { status: 1 },
      });

      ajaxLoadOption({
        type: "GET",
        url:"/city",
        showKey: "city_mm",
        selectId: "#cityId",
        filterObj: { status: 1 },
      });

      $("#cityId").on('change', function() {
        const city_id = $(this).val() ||         // get value [new entry]
                        $(this).data('value');   // get value [edit entry]

        city_id && ajaxLoadOption({
          type: "GET",
          url:"/township",
          showKey: "township_mm",
          selectId: "#townshipId",
          filterObj: { status: 1, cityid: city_id },
        });
      });

      if (isEdited && typeof isEdited === "string") {
        var city_id = $('#cityId').data('value');
        city_id && $('#cityId').val(city_id).change();

        var business_type = $('#businessType').data('value');
        business_type && $('#businessType').val(business_type).change();
      }
    });

    function updateCurrentPage(data, isStore = true) {
      let storeHtml = '';
      let storeClone = $('#sampleStore').clone();

      data.forEach((store) => {
        storeClone.find(".store-header").text(store.name);
        storeClone.find(".store-address").text(store.address);

        storeHtml += storeClone.html();
      })

      $('.list-store').empty();
      $('.list-store').append(storeHtml);

      isStore && localStoreService({ 
        key: 'entryPaging', 
        value: JSON.stringify(data), 
        method: 'set' 
      });
    }