extends ../includes/layout-main
block content
  -var isEdited = data._id || data.id;

  main.border.mx-3.mb-5.p-3(role='main')
    include ./../includes/entry/entry-header
    
    ul#myTab.nav.nav-tabs.mb-3(role='tablist')
      li.nav-item(role='information')
        button#information-tab.nav-link.active(data-toggle='tab' data-target='#information' type='button' role='tab' aria-controls='information' aria-selected='true')
          i.bi.bi-info-circle
          span.d-none.d-lg-block !{content.common.tab_info}

      //- if isEdited
      //-   li.nav-item.mx-1(role='invoices')
      //-     button#new-invoice-tab.nav-link(data-toggle='tab' data-target='#new-invoice' type='button' role='tab' aria-controls='new-invoice' aria-selected='false')
      //-       i.bi.bi-box-seam
      //-       span.d-none.d-lg-block !{content.common.tab_invoice}

    #myTabContent.tab-content
      #information.tab-pane.fade.show.active(role='tabpanel' aria-labelledby='information-tab')
        include ./../includes/entry/entry-form
          block inputs
          
            div.form-group.row
              div.col-md-6.mb-3
                label.control-label(for='name') !{content.name} *
                input.form-control.input-sm#name(type='text', name='name', value=data.name, maxlength="55" autocomplete="off" required autofocus)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='store_type_id') !{content.store_type}
                select.form-control.input-sm.custom-select.all-select2-picker#storeTypeId(name='store_type_id' value=data.store_type_id data-value=data.store_type_id, data-live-search="true", data-size="8")

              div.col-md-6.mb-3
                label.control-label(for='city_id') !{content.city_mm}
                select.form-control.input-sm.custom-select.all-select2-picker#cityId(name='city_id' value=data.city_id data-value=data.city_id, data-live-search="true", data-size="8")

              div.col-md-6.mb-3
                label.control-label(for='township_id') !{content.township_mm}
                select.form-control.input-sm.custom-select.all-select2-picker#townshipId(name='township_id' value=data.township_id data-value=data.township_id, data-live-search="true", data-size="8")

            hr

            div.form-group.row
              div.col-md-6.mb-3
                label.control-label(for='owner_id') !{content.owner_name} *
                select.form-control.input-sm.custom-select.all-select2-picker#ownerId(name='owner_id' value=data.owner_id data-value=data.owner_id, data-live-search="true", data-size="8" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='email') !{content.email} *
                input.form-control.input-sm#email(type='email', name='email', value=data.email, maxlength="55" autocomplete="off" required)
                span.invalid-feedback
                  | !{content.common.err_required}

              div.col-md-6.mb-3
                label.control-label(for='phone_1') !{content.phone_1} *
                input.form-control.input-sm#phone1(type='text', name='phone_1', value=data.phone_1, maxlength="55" autocomplete="off" required)
                span.invalid-feedback
                  | !{content.common.err_required}
                  
              div.col-md-6.mb-3
                label.control-label(for='phone_2') !{content.phone_2}
                input.form-control.input-sm#phone2(type='text', name='phone_2', value=data.phone_2, maxlength="55" autocomplete="off" )

              div.col-md-12.mb-3
                label.control-label(for='address') !{content.address}
                textarea.form-control.input-sm#address(name='address', rows='3')=data.address

            hr

            div.form-group.row
              div.col-md-12.mb-3
                label.control-label(for='description') !{content.description}
                textarea.form-control.input-sm#description(name='description', rows='3')=data.description

              div.col-md-12.mb-3
                include ./../includes/common/input-status

            include ./../includes/entry/entry-btn

      if isEdited
        #new-invoice.tab-pane.fade(role='tabpanel' aria-labelledby='new-invoice-tab')
          .d-flex.justify-content-between
            include ./../includes/entry/entry-search

            .btn-group.d-none.d-md-block
              button.btn.material-button.material-primary(type='button')
                i.bi.bi-plus
                span.ml-1.d-none.d-lg-inline-block
                  | New
  
          hr.my-4
  
          .row
            each data in [1,2,3,4,5,6,7,8]
              .col-sm-6.col-md-4.col-xl-3
                .border.rounded.mb-4
                  .card-header
                    .d-flex.justify-content-between
                      h6.invoice-header.pt-2
                        | IMP123456789
                      button.btn.material-button(type='button')
                        i.bi.bi-download
  
                  .card-body
                    h5.invoice-title
                      | Title treatment
                    p.invoice-description
                      | With supporting text below as a natural lead-in to additional content.
  
                  .card-footer
                    .d-flex.justify-content-center
                      .btn-group.btn-group-md
                        button.btn.btn-light.text-danger(type='button')
                          i.bi.bi-send
                          |   Mail
                        button.btn.btn-light.text-success(type='button')
                          i.bi.bi-eye
                          |   View

    form#postSuccessForm(method='GET', action=page.list.url)

  script.
    $(document).ready(function() {
      const isEdited = $("input[name='id']").val();

      ajaxLoadOption({
        type: "GET",
        url:"/store-type",
        showKey: "name",
        selectId: "#storeTypeId",
        filterObj: { status: 1 },
      });

      ajaxLoadOption({
        type: "GET",
        url:"/owner",
        showKey: "name",
        selectId: "#ownerId",
        filterObj: { status: 1 },
        isSelected: true,
      });

      ajaxLoadOption({
        type: "GET",
        url:"/city",
        showKey: "city_mm",
        selectId: "#cityId",
        filterObj: { status: 1 },
      });

      $("#cityId").on('change', function() {
        const city_id = $(this).val() ||         // get value [new entry]
                        $(this).data('value');   // get value [edit entry]

        city_id && ajaxLoadOption({
          type: "GET",
          url:"/township",
          showKey: "township_mm",
          selectId: "#townshipId",
          filterObj: { status: 1, cityid: city_id },
        });
      });

      if (isEdited && typeof isEdited === "string") {
        var city_id = $('#cityId').data('value');
        city_id && $('#cityId').val(city_id).change();
      }
    });